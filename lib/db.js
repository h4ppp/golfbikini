import mysql from "mysql2/promise";

export const db = mysql.createPool({
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    password: process.env.DB_PASS,
    database: process.env.DB_NAME,
});

export async function checkDBConnection() {
    try {
        //console.log("üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π...");
        const connection = await db.getConnection();
        //console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");

        const [rows] = await db.query("SELECT NOW() as now");
        //console.log("üïí –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞ MySQL:", rows[0].now);

        connection.release();
        return { success: true, logs: ["–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ", `–í—Ä–µ–º—è MySQL: ${rows[0].now}`] };
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", error);
        return { success: false, logs: [error.message, JSON.stringify(error, null, 2)] };
    }
}

export async function getUserByEmail(email) {
    const [rows] = await db.query(
        "SELECT email, first_name, second_name FROM users WHERE email = ? LIMIT 1",
        [email],
    );
    return rows[0] || null;
}
